{
  "index.html": {
    "href": "index.html",
    "title": "OpenCollar.Extensions.Logging | API Documentation",
    "keywords": "OpenCollar.Extensions.Logging A library providing extensions to the Microsoft.Extensions.Logging library adding \"Safe\" extensions, contextual information and timing mechanisms. NuGet Package Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.Logging/ Project Latest Build: Source Code on GitHub Issue Tracking on GitHub Documentation on GitHub Pages Usage A library providing extensions to the Microsoft.Extensions.Logging library adding contextual information and timing mechanisms. Related Projects OpenCollar.Azure.ReliableQueue OpenCollar.Azure.Storage OpenCollar.Extensions OpenCollar.Extensions.ApplicationInsights OpenCollar.Extensions.Collections OpenCollar.Extensions.Configuraton OpenCollar.Extensions.Environment OpenCollar.Extensions.IO OpenCollar.Extensions.Logging OpenCollar.Extensions.Security OpenCollar.Extensions.Threading OpenCollar.Extensions.Validation"
  },
  "usage/index.html": {
    "href": "usage/index.html",
    "title": "Basics | API Documentation",
    "keywords": "Basics The purpose of the libarary is to provide simple and concise extension methods that allow arguments and state to be validated efficiently at runtime."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenCollar.Extensions.Logging | API Documentation",
    "keywords": "OpenCollar.Extensions.Logging Support for automatic validation, update and strongly-typed access to configuration. NuGet Package Installation Package and installation instructions at: https://www.nuget.org/packages/OpenCollar.Extensions.Logging/"
  },
  "api/OpenCollar.Extensions.Logging.ITransientContextualInformationScope.html": {
    "href": "api/OpenCollar.Extensions.Logging.ITransientContextualInformationScope.html",
    "title": "Interface ITransientContextualInformationScope | API Documentation",
    "keywords": "Interface ITransientContextualInformationScope A disposable object that allows the values in the logging context to be temporarily changed and then reverted to their original values when disposed of. Inherited Members System.IDisposable.Dispose() Namespace : OpenCollar.Extensions.Logging Assembly : OpenCollar.Extensions.Logging.dll Syntax public interface ITransientContextualInformationScope : IDisposable Properties | Improve this Doc View Source Context Gets the current context. Declaration [NotNull] LoggingContext Context { get; } Property Value Type Description LoggingContext The current context. See Also System.IDisposable"
  },
  "api/OpenCollar.Extensions.Logging.LoggingContext.html": {
    "href": "api/OpenCollar.Extensions.Logging.LoggingContext.html",
    "title": "Class LoggingContext | API Documentation",
    "keywords": "Class LoggingContext A class that allows information to be captured for use in providing contextual information when logging. Inheritance System.Object LoggingContext Namespace : OpenCollar.Extensions.Logging Assembly : OpenCollar.Extensions.Logging.dll Syntax public sealed class LoggingContext Properties | Improve this Doc View Source Item[String] Gets the information identified by the key given.. Declaration public string this[string key] { get; } Parameters Type Name Description System.String key The key identifing the information requested. Property Value Type Description System.String The information item requested, or null if there was no corresponding item. Methods | Improve this Doc View Source AppendInfo(String, Guid) Adds the information to the context in the form of a key/value pair. Declaration public LoggingContext AppendInfo(string key, Guid value) Parameters Type Name Description System.String key The key identifying the item of information. This is case-insensitive. null , zero-length or white-space only keys are ignored. System.Guid value This is the value to record against the key given. This is typically an ID that we may want to find when searching logs. Returns Type Description LoggingContext Returns this logging context, allow fluent-style chaining of commands. | Improve this Doc View Source AppendInfo(String, Int32) Adds the information to the context in the form of a key/value pair. Declaration public LoggingContext AppendInfo(string key, int value) Parameters Type Name Description System.String key The key identifying the item of information. This is case-insensitive. null , zero-length or white-space only keys are ignored. System.Int32 value This is the value to record against the key given. This is typically an ID that we may want to find when searching logs. Returns Type Description LoggingContext Returns this logging context, allow fluent-style chaining of commands. | Improve this Doc View Source AppendInfo(String, Nullable<Guid>) Adds the information to the context in the form of a key/value pair. Declaration public LoggingContext AppendInfo(string key, Guid? value) Parameters Type Name Description System.String key The key identifying the item of information. This is case-insensitive. null , zero-length or white-space only keys are ignored. System.Nullable < System.Guid > value This is the value to record against the key given. This is typically an ID that we may want to find when searching logs. Returns Type Description LoggingContext Returns this logging context, allow fluent-style chaining of commands. | Improve this Doc View Source AppendInfo(String, Nullable<Int32>) Adds the information to the context in the form of a key/value pair. Declaration public LoggingContext AppendInfo(string key, int? value) Parameters Type Name Description System.String key The key identifying the item of information. This is case-insensitive. null , zero-length or white-space only keys are ignored. System.Nullable < System.Int32 > value This is the value to record against the key given. This is typically an ID that we may want to find when searching logs. Returns Type Description LoggingContext Returns this logging context, allow fluent-style chaining of commands. | Improve this Doc View Source AppendInfo(String, String) Adds the information to the context in the form of a key/value pair. Declaration public LoggingContext AppendInfo(string key, string value) Parameters Type Name Description System.String key The key identifying the item of information. This is case-insensitive. null , zero-length or white-space only keys are ignored. System.String value This is the value to record against the key given. This is typically an ID that we may want to find when searching logs. Returns Type Description LoggingContext Returns this logging context, allow fluent-style chaining of commands. | Improve this Doc View Source Clear() Clears the context for the current thread. Declaration public static void Clear() | Improve this Doc View Source ClearInfo() Removes all information from the current context. Declaration public LoggingContext ClearInfo() Returns Type Description LoggingContext Returns this logging context, allow fluent-style chaining of commands. | Improve this Doc View Source ClearInfo(String) Removes any information from the current context associated with the key given. Declaration public LoggingContext ClearInfo(string key) Parameters Type Name Description System.String key The key identifying the item of information. This is case-insensitive. null , zero-length or white-space only keys are ignored. Returns Type Description LoggingContext Returns this logging context, allow fluent-style chaining of commands. | Improve this Doc View Source Current() Gets the context for the current thread. Declaration public static LoggingContext Current() Returns Type Description LoggingContext The context for the current thread. | Improve this Doc View Source Current(LoggingContext) Gets the context for the current thread, initializing it from the state of the an existing context (e.g. the parent thread's context when a child thread is created). Declaration public static LoggingContext Current(LoggingContext parentContext) Parameters Type Name Description LoggingContext parentContext The parent logging context from which to inherit contextual information. Returns Type Description LoggingContext The context for the current thread. | Improve this Doc View Source GetSnapshot() Gets a snapshot of the current values held in the context. Declaration public KeyValuePair<string, string>[] GetSnapshot() Returns Type Description System.Collections.Generic.KeyValuePair < System.String , System.String >[] An array containing the key values pairs currently in the context. | Improve this Doc View Source RevertToSnapshot(KeyValuePair<String, String>[]) Reload the contextual information from the snapshot given. Declaration public void RevertToSnapshot(KeyValuePair<string, string>[] snapshot) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.String >[] snapshot The snapshot from which to reload. | Improve this Doc View Source StartScope() Initializes and returns a scope that, when disposed of, will revert the contextual information to the values at the time of calling. Declaration public ITransientContextualInformationScope StartScope() Returns Type Description ITransientContextualInformationScope An object that implements the ITransientContextualInformationScope interface that will revert the contextual information held in this logging context on disposal. | Improve this Doc View Source ToString() Returns a string that represents the current object. Declaration public override string ToString() Returns Type Description System.String A string that represents the current object. Overrides System.Object.ToString()"
  },
  "api/OpenCollar.Extensions.Logging.html": {
    "href": "api/OpenCollar.Extensions.Logging.html",
    "title": "Namespace OpenCollar.Extensions.Logging | API Documentation",
    "keywords": "Namespace OpenCollar.Extensions.Logging Classes LoggerExtensions Extension methods for the Microsoft.Extensions.Logging.ILogger interface. LoggingContext A class that allows information to be captured for use in providing contextual information when logging. Interfaces ITransientContextualInformationScope A disposable object that allows the values in the logging context to be temporarily changed and then reverted to their original values when disposed of."
  },
  "api/OpenCollar.Extensions.Logging.LoggerExtensions.html": {
    "href": "api/OpenCollar.Extensions.Logging.LoggerExtensions.html",
    "title": "Class LoggerExtensions | API Documentation",
    "keywords": "Class LoggerExtensions Extension methods for the Microsoft.Extensions.Logging.ILogger interface. Inheritance System.Object LoggerExtensions Namespace : OpenCollar.Extensions.Logging Assembly : OpenCollar.Extensions.Logging.dll Syntax public static class LoggerExtensions Properties | Improve this Doc View Source AppendContextualInformationToLogMessages Gets or sets a value indicating whether a mechanism for appending contextual information in the logs has been initialized (e.g. using telemetry). Declaration public static bool AppendContextualInformationToLogMessages { get; set; } Property Value Type Description System.Boolean false if a mechanism for appending contextual information in the logs has been initialized (e.g. using telemetry); otherwise, true to append the information directly to messages. Remarks If set to true then contextual information will be appended directly to each message. Methods | Improve this Doc View Source BeginOperation(ILogger, LogLevel, LogLevel, String) Creates a new operation scope. Declaration public static IDisposable BeginOperation(this ILogger logger, LogLevel beginLogLevel, LogLevel endLogLevel, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger to which messages will be written. Microsoft.Extensions.Logging.LogLevel beginLogLevel The level at which to write the log message at the start of the operation. Microsoft.Extensions.Logging.LogLevel endLogLevel The log level to use to write the message at the end of the operation. System.String message The fragment of message to write. Should be formed to fit into a sentence of the form \"Starting XXX.\" Returns Type Description System.IDisposable A disposable object representing the scope of the operations. Call System.IDisposable.Dispose() on the returned object to complete the operation. Exceptions Type Condition System.ArgumentNullException logger is null . System.ArgumentNullException message is null . System.ArgumentException message is zero-length. System.ArgumentException message contains only white space characters. | Improve this Doc View Source BeginOperation(ILogger, LogLevel, LogLevel, String, Func<String>) Creates a new operation scope. Declaration public static IDisposable BeginOperation(this ILogger logger, LogLevel beginLogLevel, LogLevel endLogLevel, string message, Func<string> getAdditionalEndMessage) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger to which messages will be written. Microsoft.Extensions.Logging.LogLevel beginLogLevel The level at which to write the log message at the start of the operation. Microsoft.Extensions.Logging.LogLevel endLogLevel The log level to use to write the message at the end of the operation. System.String message The fragment of message to write. Should be formed to fit into a sentence of the form \"Starting XXX.\" System.Func < System.String > getAdditionalEndMessage An action that will be called when the operation has finished to get any additional details of the operation. Returns Type Description System.IDisposable A disposable object representing the scope of the operations. Call System.IDisposable.Dispose() on the returned object to complete the operation. Exceptions Type Condition System.ArgumentNullException logger is null . System.ArgumentNullException message is null . System.ArgumentException message is zero-length. System.ArgumentException message contains only white space characters. | Improve this Doc View Source BeginOperation(ILogger, LogLevel, String) Creates a new operation scope. Declaration public static IDisposable BeginOperation(this ILogger logger, LogLevel logLevel, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger to which messages will be written. Microsoft.Extensions.Logging.LogLevel logLevel The level at which to write to the log. System.String message The fragment of message to write. Should be formed to fit into a sentence of the form \"Starting XXX.\" Returns Type Description System.IDisposable A disposable object representing the scope of the operations. Call System.IDisposable.Dispose() on the returned object to complete the operation. Exceptions Type Condition System.ArgumentNullException logger is null . System.ArgumentNullException message is null . System.ArgumentException message is zero-length. System.ArgumentException message contains only white space characters. | Improve this Doc View Source BeginOperation(ILogger, LogLevel, String, Func<String>) Creates a new operation scope. Declaration public static IDisposable BeginOperation(this ILogger logger, LogLevel logLevel, string message, Func<string> getAdditionalEndMessage) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger to which messages will be written. Microsoft.Extensions.Logging.LogLevel logLevel The level at which to write to the log. System.String message The fragment of message to write. Should be formed to fit into a sentence of the form \"Starting XXX.\" System.Func < System.String > getAdditionalEndMessage An action that will be called when the operation has finished to get any additional details of the operation. Returns Type Description System.IDisposable A disposable object representing the scope of the operations. Call System.IDisposable.Dispose() on the returned object to complete the operation. Exceptions Type Condition System.ArgumentNullException logger is null . System.ArgumentNullException logger is null . System.ArgumentException message is zero-length. System.ArgumentException message is zero-length. | Improve this Doc View Source SafeLog(ILogger, LogLevel, LoggingContext, Exception, Func<String>) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, LoggingContext context, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLog(ILogger, LogLevel, LoggingContext, Exception, String) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, LoggingContext context, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLog(ILogger, LogLevel, LoggingContext, Func<String>) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, LoggingContext context, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLog(ILogger, LogLevel, LoggingContext, String) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, LoggingContext context, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLog(ILogger, LogLevel, Exception, Func<String>) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLog(ILogger, LogLevel, Exception, String) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLog(ILogger, LogLevel, Func<String>) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLog(ILogger, LogLevel, String) Logs the message given at the specified log level, with additional contextual information taken from the context given. Declaration public static ILogger SafeLog(this ILogger logger, LogLevel logLevel, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. Microsoft.Extensions.Logging.LogLevel logLevel The log level at which to log the message. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, LoggingContext, Exception, Func<String>) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, LoggingContext context, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, LoggingContext, Exception, String) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, LoggingContext context, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, LoggingContext, Func<String>) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, LoggingContext context, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, LoggingContext, String) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, LoggingContext context, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, Exception, Func<String>) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, Exception, String) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, Func<String>) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogCritical(ILogger, String) Logs the message given with the log level set to \"Critical\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogCritical(this ILogger logger, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, LoggingContext, Exception, Func<String>) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, LoggingContext context, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, LoggingContext, Exception, String) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, LoggingContext context, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, LoggingContext, Func<String>) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, LoggingContext context, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, LoggingContext, String) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, LoggingContext context, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, Exception, Func<String>) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, Exception, String) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, Func<String>) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogDebug(ILogger, String) Logs the message given with the log level set to \"Debug\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogDebug(this ILogger logger, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, LoggingContext, Exception, Func<String>) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, LoggingContext context, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, LoggingContext, Exception, String) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, LoggingContext context, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, LoggingContext, Func<String>) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, LoggingContext context, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, LoggingContext, String) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, LoggingContext context, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, Exception, Func<String>) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, Exception, String) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, Func<String>) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogError(ILogger, String) Logs the message given with the log level set to \"Error\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogError(this ILogger logger, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, LoggingContext, Exception, Func<String>) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, LoggingContext context, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, LoggingContext, Exception, String) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, LoggingContext context, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, LoggingContext, Func<String>) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, LoggingContext context, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, LoggingContext, String) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, LoggingContext context, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, Exception, Func<String>) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, Exception, String) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, Func<String>) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogInformation(ILogger, String) Logs the message given with the log level set to \"Information\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogInformation(this ILogger logger, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, LoggingContext, Exception, Func<String>) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, LoggingContext context, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, LoggingContext, Exception, String) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, LoggingContext context, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, LoggingContext, Func<String>) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, LoggingContext context, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, LoggingContext, String) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, LoggingContext context, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, Exception, Func<String>) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, Exception, String) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, Func<String>) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogTrace(ILogger, String) Logs the message given with the log level set to \"Trace\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogTrace(this ILogger logger, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, LoggingContext, Exception, Func<String>) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, LoggingContext context, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, LoggingContext, Exception, String) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, LoggingContext context, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, LoggingContext, Func<String>) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, LoggingContext context, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, LoggingContext, String) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, LoggingContext context, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. LoggingContext context The context from which to take contextual information. If null the current thread's logging context is used. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, Exception, Func<String>) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, Exception exception, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, Exception, String) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, Exception exception, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Exception exception The exception to record alongside the message (can be left as null if there is no exception to record). System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, Func<String>) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, Func<string> message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.Func < System.String > message A function that will return the message to log. This is only called if the message will definitely be written, meaning that operations are only used when the results will be recorded. Returns Type Description Microsoft.Extensions.Logging.ILogger | Improve this Doc View Source SafeLogWarning(ILogger, String) Logs the message given with the log level set to \"Warning\", with additional contextual information taken from the current thread's logging context. Declaration public static ILogger SafeLogWarning(this ILogger logger, string message) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger The logger into which to log the message given. System.String message The message to log. Returns Type Description Microsoft.Extensions.Logging.ILogger"
  }
}